events {
    worker_connections 1024;
}

http {
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:8000;
    }

    # Include MIME types
    include /etc/nginx/mime.types;

    server {
        listen 80;
        server_name _;  # Accept all server names
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name _;  # Accept all server names

        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        # Increased body size for file uploads
        client_max_body_size 20M;

        # Frontend proxy
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Backend proxy
        location /api/ {
            proxy_pass http://backend;  # Removed trailing slash
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket proxy
        location /ws/ {
            proxy_pass http://backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Handle static and media files
        location /static/ {
            proxy_pass http://backend/static/;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        #Replace your current media location block with this:
        location /media/ {
            alias /app/media/;
            autoindex off;
            try_files $uri $uri/ =404;
            add_header Cache-Control "public, no-transform";
            add_header Access-Control-Allow-Origin *;

            
        }
        
    }
}
